#!/bin/bash
# Run Castep batch job

# set default resource requirements for job 
# - these can be overridden on the qsub command line 
# (this is for a 4 hour job on a single node using 8 processors per node)
#PBS -N EXP017C_kpoint
#PBS -l nodes=1,tpn=16,naccesspolicy=singlejob
#jobs less than 4h get priority bonus
#PBS -l walltime=48:00:00

#Change to directory from which job was submitted
###########
cd $PBS_O_WORKDIR

ndatfiles=`ls *.param | wc -l`

if [ $ndatfiles -eq 0 ]; then
  echo "No .param files in `pwd`. Aborting." >&2
  exit 101
fi

if [ $ndatfiles -gt 1 ]; then
  echo "More than one param file in `pwd`, don't know which one to choose. Aborting." >&2
  exit 102
fi

rootname=`echo *.param | sed -r "s/\.param\$//"`

set basenname for calculation
seed=$rootname

# set up directory for temporary files 
export TMPDIR=/scratch/$USER/castep-${seed}_$$
mkdir -p $TMPDIR

# setup software environment
module load openmpi castep

# run the program
echo "--- Running $rootname in `pwd`. It's `date`"

export MPI_DSM_DISTRIBUTE=yes   # Not sure if this is necessary!


arr=(1x1x1 1x2x1 2x1x1 2x2x1 3x2x1 3x3x1)
arr2=('1 1 1' '1 2 1' '2 1 1' '2 2 1' '3 2 1' '3 3 1')
for i in ${!arr[*]}
do 	  
  dir=${arr[$i]}
  if [ -d "$dir" ] 
  then
          echo "$dir already exists"
  else
	  #imcrement i
	  #Make a directory for each KE cutoff. The -p flag, means no error if existsing
	  mkdir -p $dir
	  #Match line with cut_off_energy and all that follows and replace with the string
	  #you'd like, which here is the same but with a different cutoff.
	  #put into the folder created above
	  echo "copying relevant input files *.cell *.kptaux *.param *.trajaux *.xsd"
	  echo "into ./$dir/"
	  cp *.cell ./$dir/
	  cp *.kptaux ./$dir/
	  cp *.param ./$dir/
	  cp *.trjaux ./$dir/
	  cp *.xsd ./$dir/
	  echo "entering ./$dir/, editing k-points  appropriately and running ${seed}"
	  cd $dir
	  sed -i "s/KPOINTS_MP_GRID.*/KPOINTS_MP_GRID ${arr2[$i]}/" $seed.cell
	  mpirun -np 16 castep $seed
	  rm -fr $TMPDIR
	  cd ../
	  echo "returning to" `pwd`
   fi
done

echo "--- Done. It's `date`"

