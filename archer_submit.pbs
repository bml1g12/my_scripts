#!/bin/bash --login

# uncomment the following two lines if you need to debug this script
# set -v      # Print script lines as they are read.
# set -x      # Print commands and their arguments as they are executed.

# PBS job options (name, compute nodes, job time)
#PBS -N O_
#PBS -l select=5
#PBS -q long
#PBS -l walltime=48:0:0

# Replace [budget code] below with your project code (e.g. t01)
#PBS -A e229

# Make sure any symbolic links are resolved to absolute path
export PBS_O_WORKDIR=$(readlink -f $PBS_O_WORKDIR)

START=$(date +%s.%N)

# Change to the direcotry that the job was submitted from
# (remember this should be on the /work filesystem)
cd $PBS_O_WORKDIR

# Full path-and-filename of your ONETEP executable, adjust to your needs
exe="/work/e229/e229/bml1g12/ONETEP_3.5.9.8/devel/bin/onetep.archer_bl"

cd $PBS_O_WORKDIR

ndatfiles=`ls *.dat | wc -l`

if [ $ndatfiles -eq 0 ]; then
  echo "No .dat files in `pwd`. Aborting." >&2
  exit 101
fi

if [ $ndatfiles -gt 1 ]; then
  echo "More than one dat file in `pwd`, don't know which one to choose. Aborting." >&2
  exit 102
fi

rootname=`echo *.dat | sed -r "s/\.dat\$//"`

if [ ! -x "$exe" ]; then
  echo "$exe in `pwd` does not exist or is not executable. Aborting!"
  exit 103
fi

echo "--- Running $exe in `pwd`. It's `date`"

ulimit -s unlimited
export OMP_NUM_THREADS=1

#result=$?
#- n Total parallel processes #defualt=1
#- N parallel proccesors per node #default = detault=24
#- S parallel processes per NUMA region #default =12
#- d threads per parallel process #default =1
aprun -n 120 -N 24 -S 12 -d 1 $exe $rootname.dat > $rootname.onetep 2> $rootname.err

#rm -fr $TMPDIR

echo "--- Done. It's `date`"

END=$(date +%s.%N)
DIFF=$(echo "$END - $START" | bc)
echo "Wall Time Taken: $DIFF seconds"
hours_taken=$(echo "$DIFF / 3600" | bc -l)
printf "Or Wall Time Taken: %0.3f hours\n" $hours_taken


