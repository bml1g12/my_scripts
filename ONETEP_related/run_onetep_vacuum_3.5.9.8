#example PBS submit script for Iridis3.
# Created by Jacek Dziedzic, 01/08/2011.

# The Intel compiler (2011.4) is used.
# OpenMPI v1.4.3 is used.
# FFTW3 included with the new MKL is used.
# 27/06/2014: Fixed the submission to : ppn so nodes = nodes
#
#PBS -S /bin/bash
#PBS -q batch
#PBS -l nodes=3:ppn=16,naccesspolicy=singlejob
#PBS -A sky
#PBS -l walltime=60:00:00
#PBS -N EXP047ORb_psinc_vconv

# You might find these directives useful:
# - To use enhanced (gold) service: PBS -A sky
# - To prevent other jobs from running on the same node: PBS -W "x=NACCESSPOLICY:SINGLEJOB"

# Full path-and-filename of your ONETEP executable, adjust to your needs
exe="/home/bml1g12/ONETEP_3.5.9.8/devel/bin/onetep.iridis4"

cd $PBS_O_WORKDIR

echo "--- Running $exe in `pwd`. It's `date`"

ndatfiles=`ls *.dat | wc -l`

if [ $ndatfiles -eq 0 ]; then
  echo "No .dat files in `pwd`. Aborting." >&2
  exit 101
fi

if [ $ndatfiles -gt 1 ]; then
  echo "More than one dat file in `pwd`, don't know which one to choose. Aborting." >&2
  exit 102
fi

rootname=`echo *.dat | sed -r "s/\.dat\$//"`

if [ ! -x "$exe" ]; then
  echo "$exe in `pwd` does not exist or is not executable. Aborting!"
  exit 103
fi


module load openmpi/1.6.4/intel
module unload intel/2013.4
module load intel/mkl/2013.2
module load intel/2013.2

floor_height=

#ensure FFT grid is a integer multiple of the psing spacing weve chosen, (otherwise it it will pick a new psinc spacing with a very similar number of grid points, which is closer to chosen cutoff)
awk 'NR==7 {print "psinc_spacing=0.506751081538 0.491786941026 0.506774760684"} 1' $rootname.dat > tmpfile && mv tmpfile $rootname.dat

i=1
while [ $i -le 9 ]
do
  echo "i is $i"
  #Bash doesn't support floating point arithmetic (|bc) and neeed to escape asteric (\)
  initial=37.50133229
  gap=$(echo 4 \* 0.506774760684 |bc)
  increment=$(echo $gap \* $i |bc) 
  height=$(echo $initial + $increment |bc)
  floor_height=${height/.*}
  echo Result of floor: $floor_height  
   
 
  dir=$floor_height
  echo "generating param files for step:$i, floor_height:$floor_height, height:$height, i:$i Cutoffs Energy in ./$dir/"
  #Make a directory for each vacuum length. The -p flag, means no error if existsing
  mkdir -p $dir
  

  echo "copying relevant input files *.dat *.trjaux *.xsd *.xms"
  echo "into ./$dir/"
  cp *.trjaux ./$dir/
  cp *.dat ./$dir/
  cp *.xms ./$dir/
  cp *.xsd ./$dir/
  cp *.recpot ./$dir/
  echo "entering ./$dir/"
  cd $dir
  
  echo "editing lattice height" 
  #find the z laticde height coordinate currently being used
  z_coordinate=$(sed -n '/%block lattice_cart/{n;n;n;p}' $rootname.dat | awk {'print $3'})
  #find the line number which the z coordinate is on
  line=$(grep -nr '%block lattice_cart' $rootname.dat | gawk '{print $1}' FS=":")
  line=`expr $line + 3`
  #replace the z corrdinate with a number $i
  sed -i "$line"s/"$z_coordinate"/"$height"/ $rootname.dat
  echo "--- Running $exe in `pwd`. It's `date`"
  mpirun -np 48 $exe $rootname.dat > $rootname.onetep 2>$rootname.err
  #result=$?
  #rm -fr $TMPDIR
  cd ../
  echo "returning to" `pwd`
  i=`expr $i + 1`
  echo "i is $i"
done
touch "%DONE"
echo "--- Done. It's `date`"
